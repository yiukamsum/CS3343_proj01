package obj;

import java.util.ArrayList;

public class CinemaManagingPage extends Page{
    
    private Catalog<Cinema> cinemaCatalog;
    private Admin admin;
    private CinemaManageAction authorization;

    public CinemaManagingPage(AdminConsole console) {
        super(console);

        this.admin = console.getAdmin();
        authorization = new CinemaManageAction(this.admin);
        ArrayList<Cinema> cinemaList = authorization.getCinemaList();
        cinemaCatalog = new Catalog<Cinema>(cinemaList);

    }

    public void display(){

        
        System.out.printf("\n====Manage Cinema====\n");

        int input = 0;

        do {
             System.out.printf(
                "(1) Show cinema list\n"+          
                "(2) Add cinema\n"+
                "(3) Remove cinema\n"+
                "(4) Add theatre\n"+
                "(5) Remove theatre\n"+
                "(-1) Leave this page\n");
            input = getInputStream().nextInt();

            if(input == -1) { break;}
            else if(input == 1){cinemaCatalog.show();}
            else if(input == 2){addCinema();}
            else if(input == 3){removeCinema();}
            else if(input == 4){addTheatre();}
            else if(input == 5){removeTheatre();}
            else{System.out.println("invalid input!" );}

        }while(input != -1);
    }

	public void addCinema() {
    	ArrayList<Cinema> cinemaList = new CinemaManageAction(this.admin).getCinemaList();
    	int cinemaID = cinemaList.size() + 1;
    	String name, location, phoneNo;
    	
    	System.out.println("Enter the cinema name: ");
    	name = getInputStream.nextLine();
    	
      	System.out.println("Enter the cinema location: ");
        location = getInputStream.nextLine();
        
      	System.out.println("Enter the phone number: ");
      	phoneNo = getInputStream.nextLine();
      	
      	Cinema cinema = new Cinema(cinemaID, location, name, phoneNo);
      	authorization.addCinema(cinema);
      	
    }
    
    public void removeCinema() {
    	int cinemaID;
    	
    	System.out.println("Enter the cinema ID: ");
    	cinemaID = getInputStream.nextint();
    	authorization.removeCinema(cinemaID);
    	
    }
   
	public void addTheatre() {
		
		int cinemaID, theatreID, rowNum, colNum;
		
    	System.out.println("Enter the cinema ID");
    	cinemaID = getInputStream.nextint();
    	
    	theatreID = cinemaCatalog.getItem(cinemaID).getTheatreSize() + 1;
    	
    	System.out.println("Enter the number of row:");
    	rowNum = getInputStream.nextint();
    	
    	System.out.println("Enter the number of col:");
    	colNum = getInputStream.nextint();
    	

    	Theatre t = new Theatre(theatreID, colNum, rowNum);
    	authorization.addTheatre(cinemaID, t);

    	
	}
	
    public void removeTheatre() {
    	int cinemaID, theatreID;
    	
    	System.out.println("Enter the cinema ID");
    	cinemaID = getInputStream.nextint();
    	System.out.println("Enter the theatre ID:");
    	theatreID = getInputStream.nextint();
    	
    	authorization.removeTheatre(cinemaID, theatreID);
	}  
    
}
